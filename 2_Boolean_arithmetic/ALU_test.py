import unittest
from gates import *
from mutlibit_gates import *


class TestGatesFunctions(unittest.TestCase):

    def test_ALU_nostat(self):
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 0, 1, 0, 1, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 1, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 1, 0, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 0, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 0, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 0, 1 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 0, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 1, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 0, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 0, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 1, 1, 1 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 0, 0, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 1, 0, 1 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 0, 1, 0, 1, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 1, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 1, 0, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 1, 1, 0, 0 ) , [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 0, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 1, 1, 1 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 0, 0, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 1, 0, 1 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 0, 1, 0, 1, 0 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 1, 1, 1, 1 ) , [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 1, 0, 1, 0 ) , [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 1, 1, 0, 0 ) , [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 0, 0, 0, 0 ) , [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 1, 1, 0, 1 ) , [1,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 0, 0, 0, 1 ) , [1,1,1,0,0,0,0,1,0,0,1,0,1,1,0,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 1, 1, 1, 1 ) , [1,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 0, 0, 1, 1 ) , [1,1,1,0,0,0,0,1,0,0,1,0,1,1,1,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 1, 1, 1, 1, 1 ) , [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 0, 1, 1, 1 ) , [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 1, 1, 1, 0 ) , [0,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 1, 1, 0, 0, 1, 0 ) , [0,0,0,1,1,1,1,0,1,1,0,1,0,0,0,1,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 0, 0, 1, 0 ) , [0,1,1,1,1,0,1,0,0,1,1,1,0,0,1,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 1, 0, 0, 1, 1 ) , [0,0,1,1,1,1,0,0,1,1,0,0,1,1,1,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 0, 1, 1, 1 ) , [1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 0, 0, 0, 0, 0 ) , [0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,] )
        self.assertEqual( ALU_nostat( [0,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0], [0,0,0,1,1,1,1,0,1,1,0,1,0,0,1,0], 0, 1, 0, 1, 0, 1 ) , [0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,] )


    def test_ALU(self):
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 0, 1, 0, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 1, 0, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 0, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 0, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 0, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 1, 1, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 1, 1, 0, 0, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 0, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 0, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 1, 1, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 0, 0, 0, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1, 0, 1, 0, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 0, 1, 0, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 1, 0, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 1, 1, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 0, 1, 0, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 1, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 1, 0, 1, 0 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 1, 1, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 0, 0, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 1, 1, 0, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 0, 0, 0, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 1, 1, 1, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 0, 0, 1, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 1, 1, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 0, 1, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 1, 1, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 1, 1, 0, 0, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 0, 0, 1, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 1, 0, 0, 1, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 0, 1, 1, 1 ) , ( [1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0], 0, 1 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 0, 0, 0, 0, 0 ) , ( [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], 0, 0 ) )
        self.assertEqual( ALU( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], 0, 1, 0, 1, 0, 1 ) , ( [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1], 0, 0 ) )



if __name__ == '__main__':
    unittest.main()
